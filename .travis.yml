# Use new container infrastructure to enable caching
sudo: false

# Choose a lightweight base image; we provide our own build tools.
language: c

# Caching so the next build will be fast too.
cache:
  timeout: 900  # 15 minutes
  directories:
  - $HOME/.stack
  - $HOME/.cabal/packages

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.tar

# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
#
# If you need to have different apt packages for each combination in the
# matrix, you can use a line such as:
#     addons: {apt: {packages: [libfcgi-dev,libgmp-dev]}}
matrix:
  include:
  # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
  # variable, such as using --stack-yaml to point to a different file.
  # Nightly builds are allowed to fail
  - env: BUILD=stack ARGS=""
    compiler: ": #stack 8.0.1 OSX"
    os: osx

  allow_failures:
  - env: BUILD=stack ARGS="--resolver nightly"

before_install:
- unset CC
# Download and unpack the stack executable
- mkdir -p ~/.local/bin
- export PATH=~/.local/bin:/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
- |
  if [ `uname` = "Darwin" ]
  then
    travis_retry curl --insecure -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

install:
- set -ex
- stack +RTS -N2 -RTS --skip-ghc-check --no-terminal $ARGS setup
- stack +RTS -N2 -RTS --skip-ghc-check --no-terminal $ARGS build --only-snapshot
- set +ex

script:
- set -ex
- stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
- set +ex

# Clean up the test artifacts so we don't have binaries generating .tix files
# on end-user machines. Also strip the binary of debugging symbols to reduce
# final filesize. Finally, tar it up and ship it!
before_deploy:
- |
  export BARTLETT_VERSION=$(grep version bartlett.cabal | head -1 | awk -F: '{ print $2 }' | tr -d '[:space:]')
- stack clean && stack build --copy-bins && strip "${HOME}/.local/bin/bartlett"
  && tar czvf  "bartlett-static-${BARTLETT_VERSION}.tar.gz" -C "${HOME}/.local/bin/" bartlett

deploy:
  provider: releases
  skip_cleanup: true
  file: "bartlett-static-${BARTLETT_VERSION}.tar.gz"
  api_key:
    secure: 6GeZg/qFlAGthDoBgN6Lz3JcTN5FQgp3mcf6TMWb9ipiOFl7by6N/SfvkbDL2m+wQW4hj96XH8Mo/CU/qEML98VKYnB4rjAAKm/vcUmN+8i3Ty5VD/TnOl9f+vj+Tjr47SW2DDOAWbZObW8POVli3w3lsqzbWpcAHZHpF9CwhRb3iBVqOfuttVFO6ecmjS6vHKnFBAeNlu/Y8d+kLuBvPLQiO6KGpXhyflEMO9YksFrKQqgHp2DjIJAJ+yF5ctPNUmK24gJVIX8AEftY85h5kd1iCBAzZmeveYSfciRgDe1zIR7jfvNyY1CH2Oh/450kRsicouZEp4UZzCqt5KVNlr7XNLdo+K1lO6zJTF6ooDVyO1+gtki2lrmO8UXHkh7WkWJd1/ZAb3gO/fkidwIbBBQ4UUWpfiluVrOeH9xtoZpvzAF1OwUhu3W63v2Cqfyuwb6bz6D+HHQ7UYZpBlB3D/nz2IOVeisoCpNeJ7fDNhsMnxSRHWD8Kl0Hzj7yk1eko0TMTSDf4NDf1ro4j+Ndmvq/Mpjx/ltFIfnkTeBVrmVXdOam9M5JWvS9YXPcmtIjgDTYV3A2ltGJkMoDy9BcsFmYTuTepL6GA+zpXtX7LkUtdZQKR7W+jXoPTQ9nrrwvWX5hMCRdAe7C69Lsuf8vJXHV/qxce7wtwuuZAPbF6e8=
  on:
    repo: Nike-Inc/bartlett
    tags: true
